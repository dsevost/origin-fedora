apiVersion: v1
kind: Template
metadata:
  name: jenkins-openshift-images-builder
parameters:
- name: BASE_IMAGE_VERSION
  description: Fedora base Image version, default is 27
  value: "28"
- name: OPENSHIFT_IMAGE_BUILD_VERSION
  value: v3.10.0
- name: BUILD_PREFIX
  value: "fc"
- name: SOURCE_REPOSITORY_URL
  value: https://github.com/dsevost/origin-fedora
- name: SOURCE_REPOSITORY_REF
  value: master
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: fedora
  spec:
    tags:
    - from:
        kind: DockerImage
        name: registry.fedoraproject.org/fedora:${BASE_IMAGE_VERSION}
      name: ${BASE_IMAGE_VERSION}
      importPolicy:
        scheduled: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: source-origin-node
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.io/openshift/origin-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
      importPolicy:
        scheduled: true
      name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: source-origin-hypershift
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.io/openshift/origin-hypershift:${OPENSHIFT_IMAGE_BUILD_VERSION}
      importPolicy:
        scheduled: true
      name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: source-origin-pod
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.io/openshift/origin-pod:${OPENSHIFT_IMAGE_BUILD_VERSION}
      importPolicy:
        scheduled: true
      name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: source-origin-docker-registry
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.io/openshift/origin-docker-registry:${OPENSHIFT_IMAGE_BUILD_VERSION}
      importPolicy:
        scheduled: true
      name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-source
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-etcd
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-cli
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-cli
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-pre-origin
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-hyperkube
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-hypershift
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-node
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-node
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pod
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-deployer
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-docker-builder
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-sti-builder
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-recycler
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-haproxy-router
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-nginx-router
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-docker-registry
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-docker-registry
  spec:
    tags:
    - name: ${OPENSHIFT_IMAGE_BUILD_VERSION}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-source
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-source:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      contextDir: source
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: fedora:${BASE_IMAGE_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-etcd
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-etcd:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      contextDir: etcd
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-source:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      contextDir: base
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-source:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-cli
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-cli:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      dockerfile: |-
        FROM base
        COPY tmp/oc tmp/oadm /usr/bin/
        COPY tmp-etc/oc /etc/bash_completion.d/
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp
          sourcePath: /usr/bin/oc
        - destinationDir: tmp
          sourcePath: /usr/bin/oadm
        - destinationDir: tmp-etc
          sourcePath: /etc/bash_completion.d/oc
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-cli
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-cli:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      contextDir: cli
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        buildArgs:
        - name: ZFS_REPO_FEDORA_REL
          value: ${BASE_IMAGE_VERSION}
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-cli:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-hyperkube
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-hyperkube:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM origin-base
        COPY tmp/hyperkube /usr/bin/
        LABEL io.k8s.display-name="OpenShift Kubernetes Server Commands" \
          io.k8s.description="OpenShift is a platform for developing, building, and deploying containerized applications." \
          io.openshift.tags="openshift,hyperkube"
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp
          sourcePath: /usr/bin/hyperkube
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-hypershift
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-hypershift:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM origin-base
        COPY tmp/hypershift /usr/bin/
        LABEL io.k8s.display-name="OpenShift Kubernetes Server Commands" \
          io.k8s.description="OpenShift is a platform for developing, building, and deploying containerized applications." \
          io.openshift.tags="openshift,hypershift"
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-hypershift:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp
          sourcePath: /usr/bin/hypershift
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-pre-origin
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-pre-origin:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      dockerfile: |-
        FROM cli
        COPY tmp/openshift /usr/bin/
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp
          sourcePath: /usr/bin/openshift
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-cli:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      contextDir: origin
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-pre-origin:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-node
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      dockerfile: |-
        FROM origin
        COPY tmp1 /etc/
        COPY tmp2 /opt/
        COPY tmp3 /openshift-node-config /usr/bin/
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp1
          sourcePath: /etc/cni
        - destinationDir: tmp2
          sourcePath: /opt/cni
        - destinationDir: tmp3
          sourcePath: /usr/bin/openshift-node-config
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-node
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      contextDir: node
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-node:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pod
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pod:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM source
        COPY tmp/pod /usr/bin/
        LABEL \
          io.k8s.display-name="OpenShift Origin Pod Infrastructure" \
          io.k8s.description="This is a component of OpenShift Origin and holds on to the shared Linux namespaces within a Pod." \
          io.openshift.tags="openshift,pod"
        USER 1001
        ENTRYPOINT [ "/usr/bin/pod" ]
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-pod:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp
          sourcePath: /usr/bin/pod
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-source:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-deployer
  spec:
    runPolicy: SerialLatestOnly
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-deployer:${OPENSHIFT_IMAGE_BUILD_VERSION}
    source:
      dockerfile: |-
        FROM origin
        LABEL \
          io.k8s.display-name="OpenShift Origin Deployer" \
          io.k8s.description="This is a component of OpenShift Origin and executes the user deployment process to roll out new containers. It may be used as a base image for building your own custom deployer image." \
          io.openshift.tags="openshift,deployer"
        USER 1001
        ENTRYPOINT [ "/usr/bin/openshift-deploy" ]
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-docker-builder
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-docker-builder:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM origin
        LABEL \
            io.k8s.display-name="OpenShift Origin Docker Builder" \
            io.k8s.description="This is a component of OpenShift Origin and is responsible for executing Docker image builds." \
            io.openshift.tags="openshift,builder"
        ENTRYPOINT ["/usr/bin/openshift-docker-builder"]
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-sti-builder
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-sti-builder:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM origin
        LABEL \
            io.k8s.display-name="OpenShift Origin S2I Builder" \
            io.k8s.description="This is a component of OpenShift Origin and is responsible for executing source-to-image (s2i) image builds." \
            io.openshift.tags="openshift,sti,s2i,builder"
        ENTRYPOINT ["/usr/bin/openshift-s2i-builder"]
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-recycler
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-recycler:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM origin
        LABEL \
            io.k8s.display-name="OpenShift Origin Volume Recycler" \
            io.k8s.description="This is a component of OpenShift Origin and is used to prepare persistent volumes for reuse after they are deleted." \
            io.openshift.tags="openshift,recycler"
        ENTRYPOINT ["/usr/bin/openshift-recycle"]
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-haproxy-router
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-haproxy-router:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      contextDir: router/haproxy
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-nginx-router
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-nginx-router:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      contextDir: router/nginx
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-control-plane:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-registry
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-registry:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |-
        FROM base
        COPY tmp/dockerregistry /usr/bin/
      images:
      - from:
          kind: ImageStreamTag
          name: source-origin-docker-registry:${OPENSHIFT_IMAGE_BUILD_VERSION}
        paths:
        - destinationDir: tmp
          sourcePath: /usr/bin/dockerregistry
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-base:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-openshift-images-builder
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-docker-registry
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-docker-registry:${OPENSHIFT_IMAGE_BUILD_VERSION}
    runPolicy: SerialLatestOnly
    source:
      contextDir: registry
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-pre-registry:${OPENSHIFT_IMAGE_BUILD_VERSION}
      type: Docker
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-images-pipeline
    name: ${BUILD_PREFIX}-${BASE_IMAGE_VERSION}-origin-images-pipeline
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          def appName="${BUILD_PREFIX}-${BASE_IMAGE_VERSION}"
          def project=""
          def project_current=""

          node {
            project = env.PROJECT_NAME
            echo "CI/CD project name is ${project_current}"

            def simpleBuild = { suffix ->
              stage("build-$suffix") {
                openshiftBuild(namespace: "${project}", buildConfig: "${appName}-${suffix}", showBuildLogs: 'true')
              }
            }

            [ "origin-source", "origin-base", "etcd", "origin-pre-cli", "origin-cli", "pre-origin", "origin-control-plane",
              "origin-hyperkube", "origin-hypershift", "origin-pre-node", "origin-node" ].each {
               bc -> simpleBuild(bc)
            }

            [ "origin-pod", "origin-deployer", "origin-docker-builder", "origin-sti-builder", "origin-recycler",
              "origin-haproxy-router", "origin-nginx-router", "pre-registry", "origin-docker-registry" ].each {
              bc -> simpleBuild(bc)
            }
          }
      type: JenkinsPipeline
